/*
{
    "expected_output": ["[187, 243, 22, 232, 217, 64, 175, 10, 211]"]
}
*/


thing ARC4

    has list<number> state

    setup with text key
        list<number> key_array = key.to_bytes()
        self.state = list.range(0, 256)

        number i = 0
        number j = 0

        for number i in list.range(0, 256)
            j = (j + self.state[i] + key_array[i % key_array.length()]) % 256
            self.state.swap(i, j)

    does encrypt with text plaintext returns list<number>
        list<number> ciphertext = create list<number>()

        number i = 0
        number j = 0

        for number plaintext_byte in plaintext.to_bytes()
            i = (i + 1) % 256
            j = (j + self.state[i]) % 256
            self.state.swap(i, j)
            number xor_byte = self.state[(self.state[i] + self.state[j]) % 256]
            ciphertext.append(plaintext_byte ^ xor_byte)

         return ciphertext


thing Program

    setup
        ARC4 arc4 = create ARC4("Key")
        list<number> encrypted = arc4.encrypt("Plaintext")
        Console.print(encrypted)
        arc4 = create ARC4("Key")